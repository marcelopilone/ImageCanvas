{"version":3,"file":"SetImage.setter.js","sourceRoot":"","sources":["../../src/setters/SetImage.setter.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,cAAc,EAAE,MAAM,mBAAmB,CAAC;AAEnD,MAAM,OAAO,QAAS,SAAQ,cAAc;EAExC,KAAK,CAAC,GAAG;IACL,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,OAAO,EAAE,EAAE;MAEpC,MAAM,OAAO,GAAG,IAAI,KAAK,EAAE,CAAC;MAC5B,OAAO,CAAC,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;MAC9B,IAAI;QACA,OAAO,CAAC,MAAM,GAAG,GAAG,EAAE;UAClB,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,EAAC,IAAI,CAAC,KAAK,CAAC,KAAK,EAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;UACrG,OAAO,EAAE,CAAC;QACd,CAAC,CAAC;OACL;MAAC,OAAO,KAAK,EAAE;QACZ,OAAO,CAAC,KAAK,CAAC,CAAA;OACjB;IAEL,CAAC,CAAC,CAAC;EACP,CAAC;CACJ","sourcesContent":["import { ContentDataImg } from \"../components/type\";\nimport { AbstractSetter } from \"./Abstract.setter\";\n\nexport class SetImage extends AbstractSetter{\n    layer: ContentDataImg\n    async run(): Promise<void> {\n        return new Promise((resolve, rejects) => {\n\n            const imgData = new Image();\n            imgData.src = this.layer.data;\n            try {\n                imgData.onload = () => {\n                    this.canvasContent.drawImage(imgData, this.layer.x, this.layer.y,this.layer.width,this.layer.height);\n                    resolve();\n                };\n            } catch (error) {\n                rejects(error)\n            }\n\n        });\n    }\n}\n"]}