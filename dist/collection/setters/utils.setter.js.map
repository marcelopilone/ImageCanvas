{"version":3,"file":"utils.setter.js","sourceRoot":"","sources":["../../src/setters/utils.setter.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,UAAU,EAAE,KAAK,EAAE,MAAM,GAAG,CAAA;AAGxD,OAAO,EAAE,WAAW,EAAE,MAAM,SAAS,CAAA;AAErC,MAAM,CAAC,KAAK,UAAU,YAAY,CAAE,MAA+B,EAAC,KAAW;EAC3E,MAAM,QAAQ,GAAG;IACb,CAAC,WAAW,CAAC,IAAI,CAAC,EAAC,IAAI,OAAO,CAAC,MAAM,EAAC,KAAwB,CAAC;IAC/D,CAAC,WAAW,CAAC,KAAK,CAAC,EAAC,IAAI,QAAQ,CAAC,MAAM,EAAC,KAAuB,CAAC;IAChE,CAAC,WAAW,CAAC,OAAO,CAAC,EAAC,IAAI,UAAU,CAAC,MAAM,EAAC,KAA2B,CAAC;IACxE,CAAC,WAAW,CAAC,EAAE,CAAC,EAAC,IAAI,KAAK,CAAC,MAAM,EAAC,KAAsB,CAAC;GAC5D,CAAA;EACD,OAAO,MAAM,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,CAAA;AAC3C,CAAC","sourcesContent":["import { SetText, SetImage, SetBarcode, SetQR } from \".\"\nimport { Layer } from \"../components\"\nimport { ContentDataBarcode, ContentDataImg, ContentDataQR, ContentDataText } from \"../components/type\"\nimport { OpcionTypes } from \"./types\"\n\nexport async function canvasSetter( canvas:CanvasRenderingContext2D,layer:Layer ){\n    const mapeador = {\n        [OpcionTypes.text]:new SetText(canvas,layer as ContentDataText),\n        [OpcionTypes.image]:new SetImage(canvas,layer as ContentDataImg),\n        [OpcionTypes.barcode]:new SetBarcode(canvas,layer as ContentDataBarcode),\n        [OpcionTypes.qr]:new SetQR(canvas,layer as ContentDataQR)\n    }\n    return await mapeador[layer.type].run()\n}"]}